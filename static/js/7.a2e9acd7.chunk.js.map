{"version":3,"sources":["app/components/avatar/index.tsx","app/components/headline/index.tsx","app/components/meter/circle.tsx","app/components/card/index.tsx","app/pages/home.tsx"],"names":["styled","props","className","imgName","width","React","useContext","ResponsiveContext","Box","style","borderRadius","Image","src","process","Heading","CircleMeter","value","label","align","background","pad","elevation","Stack","anchor","Meter","type","values","size","thickness","direction","bottom","Text","weight","level","Card","image","category","isMobile","containerHeight","imgSize","border","min","height","gap","opacity","justify","HomePage","textSize","btnSize","history","useHistory","flex","margin","Button","primary","onClick","push","workHistory","company","title","techStack","map","t","key","img"],"mappings":"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","file":"static/js/7.a2e9acd7.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Image, ResponsiveContext } from 'grommet';\nimport styled from 'styled-components';\n\ninterface AvatarProps {\n    className?: string;\n    imgName: string;\n    size?: 'small' | 'medium' | 'large';\n}\n\nconst Avatar: React.FC<AvatarProps> = (props: AvatarProps) => {\n    const { className, imgName } = props;\n    const size = React.useContext(ResponsiveContext);\n    let width = '300px';\n\n    if (size === 'small') {\n        width = '150px';\n    }\n\n    return (\n        <Box className={className} style={{ borderRadius: '50px' }}>\n            <Image\n                width={width}\n                src={`${process.env.PUBLIC_URL}/imgs/${imgName}.png`}\n                style={{ borderRadius: '50px' }}\n            />\n        </Box>\n    );\n};\n\nexport default styled(Avatar)`\n    border-radius: '100px';\n`;\n","import { Heading } from 'grommet';\nimport styled from 'styled-components';\n\nexport default styled(Heading)`\n    padding-bottom: 10px;\n    border-bottom: 3px solid;\n`;\n","import React from 'react';\nimport { Box, Text, Stack, Meter, Heading } from 'grommet';\n\ninterface MeterProps {\n    value: number;\n    label: string;\n}\n\nexport const CircleMeter: React.FC<MeterProps> = (props: MeterProps) => {\n    const { value, label } = props;\n    return (\n        <Box align=\"center\" background=\"light-5\" pad=\"large\" elevation=\"medium\">\n            <Stack anchor=\"center\">\n                <Meter type=\"circle\" background=\"light-3\" values={[{ value }]} size=\"xsmall\" thickness=\"small\" />\n                <Box direction=\"row\" align=\"center\" pad={{ bottom: 'xsmall' }}>\n                    <Text size=\"xlarge\" weight=\"bold\">\n                        {value}\n                    </Text>\n                    <Text size=\"small\">%</Text>\n                </Box>\n            </Stack>\n            <Heading level=\"4\">{label}</Heading>\n        </Box>\n    );\n};\n","import React from 'react';\nimport { Box, Image, Heading, ResponsiveContext } from 'grommet';\n\ninterface CardProps {\n    image: string;\n    category?: string;\n}\n\nconst Card: React.FC<CardProps> = (props: CardProps) => {\n    const { image, category } = props;\n    const size = React.useContext(ResponsiveContext);\n    const isMobile = size === 'small';\n    const containerHeight = isMobile ? '150px' : '200px';\n    const imgSize = isMobile ? '70px' : '200px';\n\n    return (\n        <Box\n            border=\"all\"\n            align=\"center\"\n            width={{ min: 'auto' }}\n            height={containerHeight}\n            direction=\"row-responsive\"\n            pad=\"medium\"\n            gap=\"large\"\n            style={{ opacity: '1' }}\n            background=\"rgba(23, 57, 67, 0.69)\"\n            justify=\"center\"\n        >\n            <Image width={imgSize} src={`${process.env.PUBLIC_URL}/imgs/${image}.png`} />\n            <Heading level=\"3\">{category}</Heading>\n        </Box>\n    );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Box, Button, Heading, Text, ResponsiveContext } from 'grommet';\nimport { useHistory } from 'react-router';\nimport { techStack, workHistory } from '../app.constants';\nimport Avatar from '../components/avatar';\nimport HeadLine from '../components/headline';\nimport { CircleMeter } from '../components/meter/circle';\nimport { Tech } from '../../types';\nimport Card from '../components/card';\n\nconst HomePage: React.FC = () => {\n    const size = React.useContext(ResponsiveContext);\n    const isMobile = size === 'small';\n    const textSize = isMobile ? '22px' : '26px';\n    const btnSize = isMobile ? '80%' : '30%';\n    const history = useHistory();\n\n    return (\n        <Box direction=\"column\" gap=\"medium\">\n            <Box align=\"center\" justify=\"center\" gap=\"medium\" flex=\"grow\">\n                <Box margin=\"small\">\n                    <Avatar imgName=\"hey\" />\n                </Box>\n                <Heading level=\"2\" margin=\"small\">\n                    Roger King\n                </Heading>\n                <Heading level=\"3\" margin=\"small\">\n                    Software Engineer.\n                </Heading>\n                <Button\n                    style={{ width: btnSize, height: '80px' }}\n                    label=\"Get in Touch\"\n                    primary\n                    onClick={(): void => {\n                        history.push('/contact');\n                    }}\n                />\n            </Box>\n            <Box align=\"center\">\n                <HeadLine level=\"3\">About</HeadLine>\n                <Box width=\"large\" gap=\"large\">\n                    <Text size={textSize}>\n                        Passionate software engineer, incorporating the latest cloud native technologies to build\n                        reactive user interfaces, scalable backend systems, and maintainable infrastructure.\n                    </Text>\n                    <Text size={textSize}>\n                        I am an avid developer for developers. Aspiring to build tooling to help streamline the\n                        development process of applications.\n                    </Text>\n                    <Text size={textSize}>\n                        I am currently employeed at {workHistory[0].company} as a {workHistory[0].title} and actively\n                        building and contributing to open source projects.\n                    </Text>\n                </Box>\n            </Box>\n            <Box align=\"center\" gap=\"medium\">\n                <HeadLine level=\"3\">Language Confidence</HeadLine>\n                <Box direction=\"row-responsive\" gap=\"medium\">\n                    <CircleMeter label=\"Java/Typescript\" value={99} />\n                    <CircleMeter label=\"GoLang\" value={88} />\n                    <CircleMeter label=\"Python\" value={75} />\n                    <CircleMeter label=\"Java\" value={60} />\n                </Box>\n            </Box>\n            <Box align=\"center\">\n                <HeadLine level=\"3\">Tech Stack</HeadLine>\n                <Box direction=\"column\" gap=\"medium\">\n                    {techStack.map(\n                        (t: Tech): JSX.Element => {\n                            return <Card key={t.img} image={t.img} category={t.category} />;\n                        },\n                    )}\n                </Box>\n            </Box>\n            <Box align=\"center\">\n                <HeadLine level=\"3\">References</HeadLine>\n                <Box direction=\"column\" gap=\"medium\">\n                    coming soon...\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}