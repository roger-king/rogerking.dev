{"version":3,"sources":["app/components/avatar/index.tsx","app/components/headline/index.tsx","app/components/meter/circle.tsx","app/components/card/index.tsx","app/data/languages.ts","app/data/references.ts","app/pages/home.tsx"],"names":["styled","props","className","imgName","width","React","useContext","ResponsiveContext","Box","style","borderRadius","Image","src","process","Heading","CircleMeter","value","label","align","background","pad","elevation","margin","Stack","anchor","Meter","type","values","size","thickness","direction","bottom","Text","weight","level","Card","image","category","isMobile","containerHeight","imgSize","border","min","height","gap","opacity","justify","languages","language","references","name","relation","testimonial","HomePage","textSize","btnSize","history","useHistory","flex","Button","primary","onClick","push","workHistory","company","title","max","wrap","map","l","key","fill","techStack","t","img","r"],"mappings":"wUAUA,IAoBeA,qBApBuB,SAACC,GAAwB,IACnDC,EAAuBD,EAAvBC,UAAWC,EAAYF,EAAZE,QAEfC,EAAQ,QAMZ,MAJa,UAHAC,IAAMC,WAAWC,OAI1BH,EAAQ,SAIR,kBAACI,EAAA,EAAD,CAAKN,UAAWA,EAAWO,MAAO,CAAEC,aAAc,SAC9C,kBAACC,EAAA,EAAD,CACIP,MAAOA,EACPQ,IAAG,UAAKC,GAAL,iBAAoCV,EAApC,QACHM,MAAO,CAAEC,aAAc,aAMxBV,CAAf,K,iIC3BeA,wBAAOc,IAAPd,CAAf,K,kBCKae,EAAoC,SAACd,GAAuB,IAC7De,EAAiBf,EAAjBe,MAAOC,EAAUhB,EAAVgB,MACf,OACI,kBAACT,EAAA,EAAD,CAAKU,MAAM,SAASC,WAAW,UAAUC,IAAI,QAAQC,UAAU,SAASjB,MAAM,SAASkB,OAAO,SAC1F,kBAACC,EAAA,EAAD,CAAOC,OAAO,UACV,kBAACC,EAAA,EAAD,CAAOC,KAAK,SAASP,WAAW,UAAUQ,OAAQ,CAAC,CAAEX,UAAUY,KAAK,SAASC,UAAU,UACvF,kBAACrB,EAAA,EAAD,CAAKsB,UAAU,MAAMZ,MAAM,SAASE,IAAK,CAAEW,OAAQ,WAC/C,kBAACC,EAAA,EAAD,CAAMJ,KAAK,SAASK,OAAO,QACtBjB,GAEL,kBAACgB,EAAA,EAAD,CAAMJ,KAAK,SAAX,OAGR,kBAACd,EAAA,EAAD,CAASoB,MAAM,KAAKjB,KCajBkB,EA1BmB,SAAClC,GAAsB,IAC7CmC,EAAoBnC,EAApBmC,MAAOC,EAAapC,EAAboC,SAETC,EAAoB,UADbjC,IAAMC,WAAWC,KAExBgC,EAAkBD,EAAW,QAAU,QACvCE,EAAUF,EAAW,OAAS,QAEpC,OACI,kBAAC9B,EAAA,EAAD,CACIiC,OAAO,MACPvB,MAAM,SACNd,MAAO,CAAEsC,IAAK,QACdC,OAAQJ,EACRT,UAAU,MACVV,IAAI,SACJwB,IAAI,QACJnC,MAAO,CAAEoC,QAAS,KAClB1B,WAAW,yBACX2B,QAAQ,UAER,kBAACnC,EAAA,EAAD,CAAOP,MAAOoC,EAAS5B,IAAG,UAAKC,GAAL,iBAAoCuB,EAApC,UAC1B,kBAACtB,EAAA,EAAD,CAASoB,MAAM,KAAKG,KC3B1BU,EAAkC,CACpC,CACIC,SAAU,kBACVhC,MAAO,IAEX,CACIgC,SAAU,SACVhC,MAAO,IAEX,CACIgC,SAAU,SACVhC,MAAO,IAEX,CACIgC,SAAU,OACVhC,MAAO,KCfTiC,EAA0B,CAC5B,CACIC,KAAM,iBACNC,SAAU,gDACVC,YAAY,guBC6FLC,UAvFY,WACvB,IACMf,EAAoB,UADbjC,IAAMC,WAAWC,KAExB+C,EAAWhB,EAAW,OAAS,OAC/BiB,EAAUjB,EAAW,MAAQ,MAC7BkB,EAAUC,cAEhB,OACI,kBAACjD,EAAA,EAAD,CAAKsB,UAAU,SAASc,IAAI,UACxB,kBAACpC,EAAA,EAAD,CAAKU,MAAM,SAAS4B,QAAQ,SAASF,IAAI,SAASc,KAAK,QACnD,kBAAClD,EAAA,EAAD,CAAKc,OAAO,SACR,kBAAC,EAAD,CAAQnB,QAAQ,SAEpB,kBAACW,EAAA,EAAD,CAASoB,MAAM,IAAIZ,OAAO,SAA1B,cAGA,kBAACR,EAAA,EAAD,CAASoB,MAAM,IAAIZ,OAAO,SAA1B,sBAGA,kBAACqC,EAAA,EAAD,CACIlD,MAAO,CAAEL,MAAOmD,EAASZ,OAAQ,QACjC1B,MAAM,eACN2C,SAAO,EACPC,QAAS,WACLL,EAAQM,KAAK,gBAIzB,kBAACtD,EAAA,EAAD,CAAKU,MAAM,UACP,kBAAC,EAAD,CAAUgB,MAAM,KAAhB,SACA,kBAAC1B,EAAA,EAAD,CAAKJ,MAAM,QAAQwC,IAAI,SACnB,kBAACZ,EAAA,EAAD,CAAMJ,KAAM0B,GAAZ,kLAIA,kBAACtB,EAAA,EAAD,CAAMJ,KAAM0B,GAAZ,gIAIA,kBAACtB,EAAA,EAAD,CAAMJ,KAAM0B,GAAZ,+BACiCS,IAAY,GAAGC,QADhD,SAC+DD,IAAY,GAAGE,MAD9E,sEAMR,kBAACzD,EAAA,EAAD,CAAKU,MAAM,SAAS0B,IAAI,UACpB,kBAAC,EAAD,CAAUV,MAAM,KAAhB,uBACA,kBAAC1B,EAAA,EAAD,CAAKJ,MAAO,CAAE8D,IAAK,UAAYpB,QAAQ,SAAShB,UAAU,iBAAiB4B,KAAK,OAAOS,MAAI,GFrChGpB,EEsCyBqB,KACZ,SAACC,GAAD,OACI,kBAAC,EAAD,CAAaC,IAAKD,EAAErB,SAAU/B,MAAOoD,EAAErB,SAAUhC,MAAOqD,EAAErD,aAK1E,kBAACR,EAAA,EAAD,CAAKU,MAAM,UACP,kBAAC,EAAD,CAAUgB,MAAM,KAAhB,cACA,kBAAC1B,EAAA,EAAD,CAAKsB,UAAU,SAASc,IAAI,SAAS2B,MAAI,GACpCC,IAAUJ,KACP,SAACK,GACG,OAAO,kBAAC,EAAD,CAAMH,IAAKG,EAAEC,IAAKtC,MAAOqC,EAAEC,IAAKrC,SAAUoC,EAAEpC,gBAKnE,kBAAC7B,EAAA,EAAD,CAAKU,MAAM,UACP,kBAAC,EAAD,CAAUgB,MAAM,KAAhB,cACA,kBAAC1B,EAAA,EAAD,CAAKsB,UAAU,SAASc,IAAI,UDhEjCK,ECiE0BmB,KAAI,SAACO,GAAD,OACjB,kBAACnE,EAAA,EAAD,CAAK8D,IAAKK,EAAEzB,KAAMN,IAAI,QAAQ1B,MAAM,SAASd,MAAO,CAAE8D,IAAK,UACvD,kBAACpD,EAAA,EAAD,CAASoB,MAAM,IAAIZ,OAAO,UACrBqD,EAAEzB,MAEP,kBAAC,EAAD,CAAUhB,MAAM,IAAIZ,OAAO,UACtBqD,EAAExB,UAEP,kBAAC3C,EAAA,EAAD,CAAKY,IAAI,UACL,kBAACY,EAAA,EAAD,KAAO2C,EAAEvB","file":"static/js/7.71785720.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Image, ResponsiveContext } from 'grommet';\nimport styled from 'styled-components';\n\ninterface AvatarProps {\n    className?: string;\n    imgName: string;\n    size?: 'small' | 'medium' | 'large';\n}\n\nconst Avatar: React.FC<AvatarProps> = (props: AvatarProps) => {\n    const { className, imgName } = props;\n    const size = React.useContext(ResponsiveContext);\n    let width = '300px';\n\n    if (size === 'small') {\n        width = '150px';\n    }\n\n    return (\n        <Box className={className} style={{ borderRadius: '50px' }}>\n            <Image\n                width={width}\n                src={`${process.env.PUBLIC_URL}/imgs/${imgName}.png`}\n                style={{ borderRadius: '50px' }}\n            />\n        </Box>\n    );\n};\n\nexport default styled(Avatar)`\n    border-radius: '100px';\n`;\n","import { Heading } from 'grommet';\nimport styled from 'styled-components';\n\nexport default styled(Heading)`\n    padding-bottom: 10px;\n    border-bottom: 3px solid;\n`;\n","import React from 'react';\nimport { Box, Text, Stack, Meter, Heading } from 'grommet';\n\ninterface MeterProps {\n    value: number;\n    label: string;\n}\n\nexport const CircleMeter: React.FC<MeterProps> = (props: MeterProps) => {\n    const { value, label } = props;\n    return (\n        <Box align=\"center\" background=\"light-5\" pad=\"large\" elevation=\"medium\" width=\"medium\" margin=\"small\">\n            <Stack anchor=\"center\">\n                <Meter type=\"circle\" background=\"light-3\" values={[{ value }]} size=\"xsmall\" thickness=\"small\" />\n                <Box direction=\"row\" align=\"center\" pad={{ bottom: 'xsmall' }}>\n                    <Text size=\"xlarge\" weight=\"bold\">\n                        {value}\n                    </Text>\n                    <Text size=\"small\">%</Text>\n                </Box>\n            </Stack>\n            <Heading level=\"4\">{label}</Heading>\n        </Box>\n    );\n};\n","import React from 'react';\nimport { Box, Image, Heading, ResponsiveContext } from 'grommet';\n\ninterface CardProps {\n    image: string;\n    category?: string;\n}\n\nconst Card: React.FC<CardProps> = (props: CardProps) => {\n    const { image, category } = props;\n    const size = React.useContext(ResponsiveContext);\n    const isMobile = size === 'small';\n    const containerHeight = isMobile ? '150px' : '200px';\n    const imgSize = isMobile ? '70px' : '200px';\n\n    return (\n        <Box\n            border=\"all\"\n            align=\"center\"\n            width={{ min: 'auto' }}\n            height={containerHeight}\n            direction=\"row\"\n            pad=\"medium\"\n            gap=\"large\"\n            style={{ opacity: '1' }}\n            background=\"rgba(23, 57, 67, 0.69)\"\n            justify=\"around\"\n        >\n            <Image width={imgSize} src={`${process.env.PUBLIC_URL}/imgs/${image}.png`} />\n            <Heading level=\"3\">{category}</Heading>\n        </Box>\n    );\n};\n\nexport default Card;\n","import { LanguageConfidence } from '../../types';\n\nconst languages: LanguageConfidence[] = [\n    {\n        language: 'Java/TypeScript',\n        value: 99,\n    },\n    {\n        language: 'GoLang',\n        value: 85,\n    },\n    {\n        language: 'Python',\n        value: 70,\n    },\n    {\n        language: 'Java',\n        value: 65,\n    },\n];\n\nexport const getLanguages = (): LanguageConfidence[] => {\n    return languages;\n};\n","import { Reference } from '../../types';\n\nconst references: Reference[] = [\n    {\n        name: 'Steven Kessler',\n        relation: 'Software Engineer @ Rocketrip & Zillion Group',\n        testimonial: `\n            Roger is an extremely talented engineer and I do not use that term lightly his time as both a member of the dev ops team and as a developer has given him a very strong and unique insight into approaching problems in todays cloud based environments.\n            This approach shines through in the solid and battle tested code he has written over the years, running the gamut from normal crud api's to fully automated deployment tools for multiple cloud providers.\n            I have worked with roger for several years now at two different companies he has always been eager to learn and grow as an engineer no matter the discipline and is incredibly easy to work with. He is a solid addition to any team.\n        `,\n    },\n];\n\nexport const getReferences = (): Reference[] => {\n    return references;\n};\n","import React from 'react';\nimport { Box, Button, Heading, Text, ResponsiveContext } from 'grommet';\nimport { useHistory } from 'react-router';\nimport { techStack, workHistory } from '../app.constants';\nimport Avatar from '../components/avatar';\nimport HeadLine from '../components/headline';\nimport { CircleMeter } from '../components/meter/circle';\nimport { Tech, LanguageConfidence, Reference } from '../../types';\nimport Card from '../components/card';\nimport { getLanguages } from '../data/languages';\nimport { getReferences } from '../data/references';\n\nconst HomePage: React.FC = () => {\n    const size = React.useContext(ResponsiveContext);\n    const isMobile = size === 'small';\n    const textSize = isMobile ? '22px' : '26px';\n    const btnSize = isMobile ? '80%' : '30%';\n    const history = useHistory();\n\n    return (\n        <Box direction=\"column\" gap=\"medium\">\n            <Box align=\"center\" justify=\"center\" gap=\"medium\" flex=\"grow\">\n                <Box margin=\"small\">\n                    <Avatar imgName=\"hey\" />\n                </Box>\n                <Heading level=\"2\" margin=\"small\">\n                    Roger King\n                </Heading>\n                <Heading level=\"3\" margin=\"small\">\n                    Software Engineer.\n                </Heading>\n                <Button\n                    style={{ width: btnSize, height: '80px' }}\n                    label=\"Get in Touch\"\n                    primary\n                    onClick={(): void => {\n                        history.push('/contact');\n                    }}\n                />\n            </Box>\n            <Box align=\"center\">\n                <HeadLine level=\"3\">About</HeadLine>\n                <Box width=\"large\" gap=\"large\">\n                    <Text size={textSize}>\n                        Passionate software engineer, incorporating the latest cloud native technologies to build\n                        reactive user interfaces, scalable backend systems, and maintainable infrastructure.\n                    </Text>\n                    <Text size={textSize}>\n                        I am an avid developer for developers. Aspiring to build tooling to help streamline the\n                        development process of applications.\n                    </Text>\n                    <Text size={textSize}>\n                        I am currently employeed at {workHistory[0].company} as a {workHistory[0].title} and actively\n                        building and contributing to open source projects.\n                    </Text>\n                </Box>\n            </Box>\n            <Box align=\"center\" gap=\"medium\">\n                <HeadLine level=\"3\">Language Confidence</HeadLine>\n                <Box width={{ max: '1000px' }} justify=\"center\" direction=\"row-responsive\" flex=\"grow\" wrap>\n                    {getLanguages().map(\n                        (l: LanguageConfidence): JSX.Element => (\n                            <CircleMeter key={l.language} label={l.language} value={l.value} />\n                        ),\n                    )}\n                </Box>\n            </Box>\n            <Box align=\"center\">\n                <HeadLine level=\"3\">Tech Stack</HeadLine>\n                <Box direction=\"column\" gap=\"medium\" fill>\n                    {techStack.map(\n                        (t: Tech): JSX.Element => {\n                            return <Card key={t.img} image={t.img} category={t.category} />;\n                        },\n                    )}\n                </Box>\n            </Box>\n            <Box align=\"center\">\n                <HeadLine level=\"3\">References</HeadLine>\n                <Box direction=\"column\" gap=\"medium\">\n                    {getReferences().map((r: Reference) => (\n                        <Box key={r.name} gap=\"small\" align=\"center\" width={{ max: '600px' }}>\n                            <Heading level=\"2\" margin=\"xsmall\">\n                                {r.name}\n                            </Heading>\n                            <HeadLine level=\"3\" margin=\"xsmall\">\n                                {r.relation}\n                            </HeadLine>\n                            <Box pad=\"medium\">\n                                <Text>{r.testimonial}</Text>\n                            </Box>\n                        </Box>\n                    ))}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}